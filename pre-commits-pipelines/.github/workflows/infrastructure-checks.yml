name: Infrastructure Checks

on:
  pull_request:
    paths:
      - '**/*.tf'
      - '**/*.tfvars'
      - '**/*.hcl'
      - Dockerfile
      - .github/workflows/**
      - .pre-commit-config.yaml
  push:
    branches: [ main, master ]
    paths:
      - '**/*.tf'
      - '**/*.tfvars'
      - '**/*.hcl'
      - Dockerfile
      - .github/workflows/**
      - .pre-commit-config.yaml

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

env:
  TERRAFORM_VERSION: 1.6.0
  TFLINT_VERSION: 0.34.0
  TFSEC_VERSION: latest
  PLUGIN_CACHE_DIR: ${{ runner.os }}-terraform-plugin-cache

jobs:
  pre-commit:
    name: Run pre-commit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - name: Install pre-commit
        run: pip install pre-commit
      - name: Execute pre-commit checks
        run: pre-commit run --all-files --show-diff-on-failure

  terraform:
    name: Terraform fmt, init & validate
    runs-on: ubuntu-latest
    needs: pre-commit
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: hashicorp/setup-terraform@v2
        with: { terraform_version: ${{ env.TERRAFORM_VERSION }} }
      - name: Enable plugin cache
        run: |
          mkdir -p $PLUGIN_CACHE_DIR
          echo "plugin_cache_dir = \"$PLUGIN_CACHE_DIR\"" >> ~/.terraformrc
      - uses: actions/cache@v3
        with:
          path: $PLUGIN_CACHE_DIR
          key: ${{ runner.os }}-terraform-plugins-${{ hashFiles('**/*.tf*') }}
      - name: Check formatting
        run: terraform fmt -check -recursive
      - name: Init & validate
        run: |
          terraform init -backend=false -input=false
          terraform validate

  tflint:
    name: TFLint analysis
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: wata727/tflint-action@v0.17.0
        with: { tflint_version: ${{ env.TFLINT_VERSION }} }
      - run: tflint --format=compact

  tfsec:
    name: tfsec security scan
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: aquasecurity/tfsec-action@v1.0.3
        with:
          version: ${{ env.TFSEC_VERSION }}
          soft_fail: true
          github_token: ${{ secrets.GITHUB_TOKEN }}

  trivy:
    name: Trivy Docker image scan
    runs-on: ubuntu-latest
    needs: pre-commit
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - name: Build infra-checks image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          push: false
          tags: infra-checks:latest
      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@v0.8.0
        with:
          image-ref: infra-checks:latest
          format: table
          severity: CRITICAL,HIGH
          exit-code: '1'

  gitguardian:
    name: GitGuardian secrets scan
    runs-on: ubuntu-latest
    needs: [terraform, tflint, tfsec, trivy]
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: GitGuardian/ggshield/actions/secret@v1.34.0
        env:
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

  infracost-pr:
    name: Infracost Pull Request Checks
    if: >
      github.event_name == 'pull_request' &&
      contains(['opened','synchronize'], github.event.action)
    runs-on: ubuntu-latest
    needs: terraform
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.base.ref }}
      - uses: infracost/actions/setup@v3
        with: { api-key: ${{ secrets.INFRACOST_API_KEY }} }
      - run: infracost breakdown --path=. --format=json --out-file=baseline.json
      - uses: actions/checkout@v4
      - run: infracost diff --path=. --compare-to=baseline.json --format=json --out-file=diff.json
      - run: infracost comment github --path=diff.json --behavior=update --github-token=${{ secrets.GITHUB_TOKEN }}

  infracost-main:
    name: Infracost Mainâ€‘branch Update
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/main')
    runs-on: ubuntu-latest
    needs: infracost-pr
    steps:
      - uses: actions/checkout@v4
      - uses: infracost/actions/setup@v3
        with: { api-key: ${{ secrets.INFRACOST_API_KEY }} }
      - run: |
          infracost breakdown --path=. --format=json --out-file=infracost.json
          infracost upload --path=infracost.json || echo "Policy failures allowed on main"

  infracost-status:
    name: Infracost PR Status Update
    if: >
      github.event_name == 'pull_request' &&
      github.event.action == 'closed'
    runs-on: ubuntu-latest
    needs: infracost-pr
    steps:
      - id: pr
        run: |
          echo "::set-output name=status::${{ github.event.pull_request.merged && 'MERGED' || 'CLOSED' }}"
      - run: |
          curl -X POST https://dashboard.api.infracost.io/graphql \
            -H "Content-Type: application/json" \
            -H "X-API-Key: ${{ secrets.INFRACOST_API_KEY }}" \
            -d '{"query":"mutation { updatePullRequestStatus(url:\"'${{ github.event.pull_request.html_url }}'\",status:'${{ steps.pr.outputs.status }}') }"}'

  slack-notify:
    name: Slack notification
    runs-on: ubuntu-latest
    needs:
      - pre-commit
      - terraform
      - tflint
      - tfsec
      - trivy
      - gitguardian
      - infracost-pr
      - infracost-main
      - infracost-status
    if: always()
    steps:
      - name: Send Slack message
        uses: slackapi/slack-github-action@v1.27.0
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":gear: *${{ github.workflow }}* on branch *${{ github.ref_name }}* finished with status *${{ job.status }}*.\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View run>"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
